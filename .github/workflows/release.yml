name: Release

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Save Upload URL
        shell: bash
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt
      - name: Upload Upload URL
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.txt
  # build-linux:
  #   runs-on: ubuntu-latest
  #   needs: create-release
  #   steps:
  #     - name: Setup Rust
  #       uses: hecrj/setup-rust-action@v1.2.2
  #       with:
  #         rust-version: stable
  #         targets: "x86_64-unknown-linux-musl"
  #     - name: Checkout Code
  #       uses: actions/checkout@v1
  #     - name: Build
  #       env:
  #         TARGET: x86_64-unknown-linux-musl
  #       run: cargo build --release --verbose --target $TARGET --locked
  #     - name: Download Upload URL
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: upload_url
  #     - name: Get Upload URL
  #       id: get_release_info
  #       run: |
  #         value=`cat upload_url/upload_url.txt`
  #         echo ::set-output name=upload_url::$value
  #     - name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.get_release_info.outputs.upload_url }}
  #         asset_path: target/x86_64-unknown-linux-musl/release/fistbump
  #         asset_name: fistbump-${{ github.ref }}-x86_64-unknown-linux-musl
  #         asset_content_type: application/octet-stream
  # build-mac:
  #   runs-on: macOS-latest
  #   needs: create-release
  #   steps:
  #     - name: Setup Rust
  #       uses: hecrj/setup-rust-action@v1.2.2
  #       with:
  #         rust-version: stable
  #     - name: Checkout Code
  #       uses: actions/checkout@v1
  #     - name: Build
  #       env:
  #         MACOSX_DEPLOYMENT_TARGET: 10.7
  #         TARGET: x86_64-apple-darwin
  #       run: cargo build --release --verbose --target $TARGET --locked
  #     - name: Download Upload URL
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: upload_url
  #     - name: Get Upload URL
  #       id: get_release_info
  #       run: |
  #         value=`cat upload_url/upload_url.txt`
  #         echo ::set-output name=upload_url::$value
  #     - name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.get_release_info.outputs.upload_url }}
  #         asset_path: target/x86_64-apple-darwin/release/fistbump
  #         asset_name: fistbump-${{ github.ref }}-x86_64-apple-darwin
  #         asset_content_type: application/octet-stream
  build-win:
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1.2.2
        with:
          rust-version: stable
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Build
        env:
          TARGET: x86_64-pc-windows-msvc
        run: cargo build --release --verbose --target x86_64-pc-windows-msvc --locked
      - name: Download Upload URL
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - name: Get Upload URL
        id: get_release_info
        run: |
          set /P value=<upload_url\upload_url.txt
          echo ::set-output name=upload_url::%value%
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: target/x86_64-pc-windows-msvc/release/fistbump.exe
          asset_name: fistbump-${{ github.ref }}-x86_64-pc-windows-msvc.exe
          asset_content_type: application/octet-stream
